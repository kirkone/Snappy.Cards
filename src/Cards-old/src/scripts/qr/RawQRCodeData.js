// @autogenerated

export function getGeneratorIndex(data) {
  return data & 0xf;
}

export function getAdditionalByteCount(data) {
  return data >> 11;
}

export function getNumBlocks(data) {
  return (data >> 4) & 0x7f;
}

/** the generator coefficients, encoded in hex and separated by "|" */
export const GENERATOR_DATA =
  "7f7a9aa40b4475|d8c29f6fc75e5f719dc1|8949e311b111340d2e2b538478|1dc46fa3704a0a69698b849720861a|3b0d68bd44d11e08a34129e56232243b|774253787716c553f9298f8655357d634f|effbb77195afc7d7f0dc4952ad4b2043d992|98b9f0056f6306dc70964524bb16e4c67979a5ae|59b383b0b6f413bd45281c891d7b43fd56dae61a91f5|7a76a946b2edd8667396e54982483d2bce01edf77fd99075|f633b7048862c7984d38ce189128d175e92a87444690924d2b5e|fc091c0d12fbd09667ae6429a70cf7387577e97fb5647993b04a3ac5|d4f64d49c3c04b62054667b116d98a33b5f64819122ee44ad8c30b6a8296";

/**
 * Packed 32-bit data structures representing the qr code data info
 * for each error-correction level, sorted M L H Q (the bit-order)
 */
export const BLOCK_DATA =
  "100h0o0k100q18161c191c2410261s281o2o242q2c2s28482o4o1u4p34592c5b3c5r3g6q407a2k8a2q8q488r4s9b3cab5car3sbr44cr42db4keb6ker54fr5cgr5khr5sir5ejb6ckb4slr6smr74nr7cor|160g0u0h1a0j1i0n1o0q1o1618172c192c1c2k2634272s293k2a222c3s3844393k3b4k3c4k3r444b4e4b4k4r5g4s505c6c6a5s6b646c3u6s687c6g7s6o8c708s789c7g9s769s80ac88as8gbc6scc90cs|0i0l0e0r0k180k240k280s2b0c2q183a0s491c4b145p145r1c8812891k991s8c1s9r1sar1ocq2ocr1acs28h91cfc34gc1ghs3kis20kc22lc2gms2ooc30ps38rc3gss3ouc1ivs491c2l3c2t5c516s3d8s|0q0i0i0o0o160s1a0s260s290o361c381c471c491k4b1k5a2c691287246c1s8p2k8b1s9b30aq2gac1mbr3gbs2scs34ds3ces28hb3chc3uhs2gjc4kkc30ls54ms3goc3ops3eqs48sc4gts4ovc510s592c";
